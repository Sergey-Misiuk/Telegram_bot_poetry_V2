
services:

  # poetry_base:
  #   build:
  #     context: .
  #     dockerfile: dockerfile.base
  #   image: poetry_base

  postgresql:
    image: postgres:16.0-alpine3.18
    container_name: postgresql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - back_net

  api:
    build:
      context: .
      dockerfile: backend/dockerfile
    image: fast.api:0.1
    container_name: poetry_club_api
    restart: unless-stopped
    networks:
      - back_net
    depends_on:
      - postgresql
    env_file:
      - .env
    volumes:
      - ./backend/api:/app/api
    ports:
      - "8000:8000"
  
  bot:
    build:
      context: .
      dockerfile: bot/dockerfile
    image: telegram.bot:0.1
    container_name: telegram_bot
    restart: unless-stopped
    networks:
      - back_net
    depends_on:
      - postgresql
      - api
    env_file:
      - .env
    volumes:
      - ./bot:/app/bot

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    networks:
      - back_net
    ports:
      - 8080:8080
    depends_on:
      - postgresql

networks:
  back_net:
    name: poetry_club_network
    driver: bridge

volumes:
  pg_data:
  

